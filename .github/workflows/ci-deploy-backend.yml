name: CI & Deploy Backend

on:
  push:
    branches:
      - main
      - develop

env:
  REGISTRY: registry.dnp-project.ru
  IMAGE_NAME: backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install & test
        run: |
          python -m pip install --upgrade pip
          pip install -r devops/requirements.txt
          pytest

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASS }}

      - name: Build Docker image
        run: |
          TAG=${{ github.ref == 'refs/heads/main' && echo latest || echo dev }}
          docker build \
            -f devops/Dockerfile \
            -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$TAG \
            .

      - name: Push Docker image
        run: |
          TAG=${{ github.ref == 'refs/heads/main' && echo latest || echo dev }}
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$TAG

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            TAG=${{ github.ref == 'refs/heads/main' && echo latest || echo dev }}
            if [ "$TAG" = "latest" ]; then
              cd /opt/prod
            else
              cd /opt/stage
            fi
            docker compose pull backend
            docker compose up -d backend
